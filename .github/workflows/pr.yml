name: PR

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
      - uses: pre-commit/action@v3.0.1
  mypy:
    runs-on: ubuntu-latest
    env:
      MYPY_CACHE_DIR: ~/.cache/mypy
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: uv sync
      - uses: actions/cache@v4
        with:
          path: ${{ env.MYPY_CACHE_DIR }}
          key: mypy-${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('uv.lock') }}
      - name: Run Mypy
        run: uv run --frozen mypy
        # testing ty
      - name: Run ty
        continue-on-error: true
        run: uv run --frozen ty check

  tests:
    needs: [pre-commit, mypy]
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # ddtrace fails to build
          - os: windows-latest
            python-version: "3.13"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync
      - name: Run pytest
        run: uv run --frozen python -m pytest tests/
